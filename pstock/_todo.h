/*

2016/01/21 XCode上でPStock開始。OpenMPを使いたい。HomeBrewを入れる。
2016/01/23 aprを使う
　　　　　　　build rulesのother linker flagsに-laprutil-1 -lapr-1を設定
　　　　　　　xmapString.c作成中。UTF-8対応が厄介か（→後日談、特に何も考えなくてよかった。）
2016/01/24 xmapString.cとりあえず作成
　　　　　　　メモリ上の株価データと決算データ作成
2016/01/25 株価データと決算データの読み込み完成。株価データの読み込みに並列で10秒かかる。
　　　　　　　式評価部分作成開始
2016/01/26 株価データのバイナリフォーマット読み書き作成。0.25秒で読み込み。
2016/01/27 式評価部分作成中
　　　　　　　値評価無しの状態で、1スレッド45秒、4スレッド25秒。
　　　　　　　floatをdoubleにするとむしろ遅い。
　　　　　　　メモリ確保がネックだったようで、1スレッド16秒、4スレッド7秒に。
2016/01/28 式評価部分作成中
　　　　　　　バックテスト部分作成中
2016/01/29 一応バックテストまで動くように。15日ブレイクアウトなら、4秒程度で全体終わるって何事。
2016/01/30 バックテストを繰り返してバグ修正。
　　　　　　　java側から呼び出せるようにした。
2016/01/31 バックテストを繰り返してバグ修正。
　　　　　　　出来高別の処理。
2016/02/01 単位株のバグ修正。
　　　　　　　合成ストラテジーの処理作成中
　　　　　　　3546行
2016/02/02 合成ストラテジーの処理作成中
2016/02/03 合成ストラテジーのバグ修正。
2016/02/04 合成ストラテジーのバグ修正。ポジション変更処理追加。
2016/02/05 期間指定対応
2016/02/06 バッファオーバーフローを修正（positionSignalのサイズが履歴と違っていた）
　　　　　　　ストラテジーの探索機能作成
　　　　　　　4873行
2016/02/20 date, nk225future対応
　　　　　　　filter対応
2016/02/27 空売りは貸借銘柄のみ。shijou対応



todayシグナル

ブラックリスト機能
javaでバイナリ出力
データの整合性チェック
偶数奇数分割でフォワード分析
指値とか分割売買とか引け値手仕舞いとか逆指値とか

日経平均が高値圏、安値圏、高値圏からの中位、安値圏からの中位の４種類に分ける。
さらに、そこから上がっていった場合、下がっていった場合、レンジだった場合、暴落の底の4種類に分ける。
16個に別れた合成ストラテジルールで、探索する。これでどうか。

合成ストラテジで、前のまま保持のnullルールを作る。

*/
